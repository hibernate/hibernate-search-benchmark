<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.hibernate.search.benchmark</groupId>
    <artifactId>hibernate-search-benchmark</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>model</module>
        <module>search5</module>
        <module>search6</module>
        <module>jmh-base</module>
        <module>jmh-lucene</module>
        <module>jmh-elasticsearch</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>

        <version.hibernate.orm>5.4.31.Final</version.hibernate.orm>
        <version.hibernate.search6>6.0.3.Final</version.hibernate.search6>
        <version.hibernate.search5>5.11.9.Final</version.hibernate.search5>
        <version.postgresql.client>42.2.20</version.postgresql.client>
        <version.jmh>1.31</version.jmh>
        <version.log4j>2.14.1</version.log4j>
        <version.junit.jupiter>5.7.2</version.junit.jupiter>
        <version.assertj>3.19.0</version.assertj>

        <version.processor.plugin>4.5</version.processor.plugin>
        <version.shade.plugin>3.2.4</version.shade.plugin>
        <version.failsafe.plugin>3.0.0-M5</version.failsafe.plugin>
        <version.docker.maven.plugin>0.35.0</version.docker.maven.plugin>

        <postgres.image>postgres:13.3</postgres.image>

        <jmh.uberjar.name>benchmarks</jmh.uberjar.name>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${version.hibernate.orm}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-agroal</artifactId>
                <version>${version.hibernate.orm}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.junit.jupiter}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${version.assertj}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${version.docker.maven.plugin}</version>
                    <configuration>
                        <images>
                            <image>
                                <name>${postgres.image}</name>
                                <alias>postgresql</alias>
                                <run>
                                    <env>
                                        <POSTGRES_USER>username</POSTGRES_USER>
                                        <POSTGRES_PASSWORD>password</POSTGRES_PASSWORD>
                                        <POSTGRES_DB>database</POSTGRES_DB>
                                    </env>
                                    <ports>
                                        <port>5431:5432</port>
                                    </ports>
                                    <wait>
                                        <tcp>
                                            <mode>mapped</mode>
                                            <ports>
                                                <port>5432</port>
                                            </ports>
                                        </tcp>
                                        <time>10000</time>
                                    </wait>
                                </run>
                            </image>
                        </images>
                        <!--Stops all postgres images currently running, not just those we just started.
                          Useful to stop processes still running from a previously failed integration test run -->
                        <allContainers>true</allContainers>
                    </configuration>
                    <executions>
                        <execution>
                            <id>docker-start</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>stop</goal>
                                <goal>start</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>docker-stop</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>